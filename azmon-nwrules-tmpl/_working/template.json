{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Project": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Identifier for the project, application or customer -=- PLEASE ONLY USE LOWER CASE AND NUMBERS -=-"
      }
    },
    "Environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "acc",
        "prod"
      ],
      "defaultValue": "test",
      "metadata": {
        "description": "Can one of the following, dev-test-acc-prod -=- PLEASE ONLY USE LOWER CASE AND NUMBERS -=-"
      }
    },
    "WorkspaceRGName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Resource group name where basic monitoring was deployed -=- PLEASE ONLY USE LOWER CASE AND NUMBERS -=-"
      }
    },
    "workspaceName": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Workspace name where basic monitoring is running -=- PLEASE ONLY USE LOWER CASE AND NUMBERS -=-"
      }
    },
    "CreatedOn": {
      "defaultValue": "[utcNow()]",
      "type": "String"
    },
    "EndsOn": {
      "defaultValue": "yyyymmdd",
      "type": "String"
    },
    "CreatedBy": {
      "defaultValue": "Default",
      "type": "String"
    },
    "OwnedBy": {
      "defaultValue": "Default",
      "type": "String"
    }
  },
  "variables": {
    "TemplateId": "azmon-nwrules",
    "TemplateVersion": "1.0.3",
    "TemplateDate": "20190913",
    "TemplateDescription": "Changed action group to variable",
    "TemplateUsage": "Is used to create network monitoring rules.",
    "TemplateDocumentation": "<Name of document.>",
    "Project": "[toLower(replace(parameters('Project'), '-', ''))]",
    "Environment": "[toLower(parameters('Environment'))]",
    "WorkspaceRGName": "[toLower(parameters('WorkspaceRGName'))]",
    "WorkspaceName": "[toLower(parameters('WorkspaceName'))]",
    "actionGroupName": "[concat('nwrules-', variables('Project'), '-', variables('Environment'), '-agrp')]",
    "actionGroupShortName": "[take(concat('nwrules', variables('Project')), 12)]",
    "emailAddress": "dummy@nowhere.com"
  },
  "resources": [
    {
      "name": "Network - Azure Vnet to On-premise",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-04-16",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "EndsOn": "[parameters('EndsOn')]",
        "CreatedBy": "[parameters('CreatedBy')]",
        "OwnedBy": "[parameters('OwnedBy')]",
        "Project": "[parameters('Project')]",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "description": "Network - Azure Vnet to On-premise",
        "enabled": "true",
        "source": {
          "query": "NetworkMonitoring \r\n| where TestName == \"AzVnet2OnPrem\"\r\n| where (SubType == \"EndpointHealth\" or SubType == \"EndpointPath\")\r\n| where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or ServiceResponseHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\")",
          "datasourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', variables('workspaceRGName'), '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
          "queryType": "ResultCount",
          "authorizedResources": [
            "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', variables('workspaceRGName'), '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        "schedule": {
          "frequencyInMinutes": 5,
          "timeWindowInMinutes": 5
        },
        "action": {
          "severity": "2",
          "aznsAction": {
            "actionGroup": [
              "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('ActionGroupName'))]"
            ]
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": 0
          },
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
        }
      },
      "dependsOn": [
        "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('ActionGroupName'))]"
      ]
    },
    {
      "name": "Network - Azure Vnet to Web",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-04-16",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "EndsOn": "[parameters('EndsOn')]",
        "CreatedBy": "[parameters('CreatedBy')]",
        "OwnedBy": "[parameters('OwnedBy')]",
        "Project": "[parameters('Project')]",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "description": "Network - Azure Vnet to Web",
        "enabled": "true",
        "source": {
          "query": "NetworkMonitoring \r\n| where TestName == \"AzVnet2Web\"\r\n| where (SubType == \"EndpointHealth\" or SubType == \"EndpointPath\")\r\n| where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or ServiceResponseHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\")",
          "datasourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', variables('workspaceRGName'), '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
          "queryType": "ResultCount",
          "authorizedResources": [
            "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', variables('workspaceRGName'), '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        "schedule": {
          "frequencyInMinutes": 5,
          "timeWindowInMinutes": 5
        },
        "action": {
          "severity": "2",
          "aznsAction": {
            "actionGroup": [
              "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('ActionGroupName'))]"
            ]
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": 0
          },
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
        }
      },
      "dependsOn": [
        "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('ActionGroupName'))]"
      ]
    },
    {
      "name": "Network - Azure Vnet to Azure Vnet",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-04-16",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "EndsOn": "[parameters('EndsOn')]",
        "CreatedBy": "[parameters('CreatedBy')]",
        "OwnedBy": "[parameters('OwnedBy')]",
        "Project": "[parameters('Project')]",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "description": "Network - Azure Vnet to Azure Vnet",
        "enabled": "true",
        "source": {
          "query": "NetworkMonitoring \r\n| where TestName == \"AzVnet2AzVnet\"\r\n| where (SubType == \"EndpointHealth\" or SubType == \"EndpointPath\")\r\n| where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or ServiceResponseHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\")",
          "datasourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', variables('workspaceRGName'), '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
          "queryType": "ResultCount",
          "authorizedResources": [
            "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', variables('workspaceRGName'), '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        "schedule": {
          "frequencyInMinutes": 5,
          "timeWindowInMinutes": 5
        },
        "action": {
          "severity": "2",
          "aznsAction": {
            "actionGroup": [
              "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('ActionGroupName'))]"
            ]
          },
          "trigger": {
            "thresholdOperator": "GreaterThan",
            "threshold": 0
          },
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
        }
      },
      "dependsOn": [
        "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('ActionGroupName'))]"
      ]
    },
    {
      "type": "microsoft.insights/actionGroups",
      "name": "[variables('ActionGroupName')]",
      "apiVersion": "2018-03-01",
      "location": "Global",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "EndsOn": "[parameters('EndsOn')]",
        "CreatedBy": "[parameters('CreatedBy')]",
        "OwnedBy": "[parameters('OwnedBy')]",
        "Project": "[parameters('Project')]",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "groupShortName": "[variables('ActionGroupShortName')]",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "[concat(parameters('Project'), ' SMTP_-EmailAction-')]",
            "emailAddress": "[variables('EmailAddress')]"
          }
        ],
        "smsReceivers": [
        ],
        "webhookReceivers": [
        ],
        "itsmReceivers": [
        ],
        "azureAppPushReceivers": [
        ],
        "automationRunbookReceivers": [
        ],
        "voiceReceivers": [
        ],
        "logicAppReceivers": [
        ],
        "azureFunctionReceivers": [
        ]
      },
      "dependsOn": [
      ]
    }
  ],
  "outputs": {
    "ActionGroupId": {
      "type": "string",
      "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('actionGroupName'))]"
    },
    "TemplateVersion": {
      "type": "string",
      "value": "[variables('TemplateVersion')]"
    },
    "TemplateDate": {
      "type": "string",
      "value": "[variables('TemplateDate')]"
    }
  }
}

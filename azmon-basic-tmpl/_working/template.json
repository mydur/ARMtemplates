{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Project": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Identifier for the project, customer or application -=- PLEASE ONLY USE LOWER CASE AND NUMBERS -=-"
      }
    },
    "VMRGName": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Resourcegroup name where VMs are deployed (used for demo saved searches) -=- PLEASE ONLY USE LOWER CASE AND NUMBERS -=-"
      }
    },
    "Environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "acc",
        "prod"
      ],
      "defaultValue": "test",
      "metadata": {
        "description": "Can one of the following, dev-test-acc-prod"
      }
    },
    "UniqueNumber": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Unique number to add to the name of the accounts."
      }
    },
    "dataRetention": {
      "type": "int",
      "defaultValue": 31,
      "minValue": 31,
      "maxValue": 730,
      "metadata": {
        "description": "Number of retention days in the PerGB2018 pricing tier (31-730)."
      }
    },
    "Location": {
      "type": "string",
      "allowedValues": [
        "East Asia",
        "Southeast Asia",
        "Central US",
        "East US",
        "East US 2",
        "West US",
        "North Central US",
        "South Central US",
        "North Europe",
        "West Europe",
        "Japan West",
        "Japan East",
        "Brazil South",
        "Australia East",
        "Australia",
        "Southeast",
        "South India",
        "Central India",
        "West India",
        "Canada Central",
        "Canada East",
        "UK South",
        "UK West",
        "West Central US",
        "West US 2",
        "Korea Central",
        "Korea South",
        "France Central",
        "France South",
        "Australia Central",
        "Australia Central 2",
        "South Africa North",
        "South Africa West"
      ],
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region or location where resources will be deployed"
      }
    },
    "CreatedOn": {
      "defaultValue": "[utcNow()]",
      "type": "String"
    },
    "EndsOn": {
      "defaultValue": "yyyymmdd",
      "type": "String"
    },
    "CreatedBy": {
      "defaultValue": "Default",
      "type": "String"
    },
    "OwnedBy": {
      "defaultValue": "Default",
      "type": "String"
    }
  },
  "variables": {
    "TemplateId": "azmon-basic",
    "TemplateVersion": "1.2.0",
    "TemplateDate": "20191004",
    "TemplateDescription": "Added saved search for maintenance mode",
    "TemplateUsage": "Is used to setup a base monitoring environment.",
    "TemplateDocumentation": "<Name of document.>",
    "Project": "[toLower(replace(parameters('Project'), '-', ''))]",
    "Environment": "[toLower(replace(parameters('Environment'), '-', ''))]",
    "VMRGName": "[toLower(parameters('VMRGName'))]",
    "storageAccountName": "[concat(variables('Project'), parameters('UniqueNumber'), variables('Environment'), 'stor')]",
    "automationAccountName": "[concat(variables('Project'), parameters('UniqueNumber'), '-', variables('Environment'), '-auto')]",
    "workspaceName": "[concat(variables('Project'), parameters('UniqueNumber'), '-', variables('Environment'), '-lana')]"
  },
  "resources": [
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[variables('automationAccountName')]",
      "apiVersion": "2015-10-31",
      "location": "[parameters('Location')]",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "EndsOn": "[parameters('EndsOn')]",
        "CreatedBy": "[parameters('CreatedBy')]",
        "OwnedBy": "[parameters('OwnedBy')]",
        "Project": "[parameters('Project')]",
        "Environment": "[parameters('Environment')]"
      },
      "scale": null,
      "properties": {
        "sku": {
          "name": "Free"
        }
      },
      "dependsOn": [
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/providers/locks",
      "name": "[concat(variables('automationAccountName'), '/Microsoft.Authorization/automationaccountlock')]",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ],
      "properties": {
        "level": "CannotDelete",
        "notes": "Automation account should not be deleted."
      }
    },
    {
      "type": "microsoft.operationalinsights/workspaces",
      "name": "[variables('workspaceName')]",
      "apiVersion": "2015-11-01-preview",
      "location": "[parameters('Location')]",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "EndsOn": "[parameters('EndsOn')]",
        "CreatedBy": "[parameters('CreatedBy')]",
        "OwnedBy": "[parameters('OwnedBy')]",
        "Project": "[parameters('Project')]",
        "Environment": "[parameters('Environment')]"
      },
      "scale": null,
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "features": {
          "searchVersion": 1
        },
        "retentionInDays": "[parameters('dataRetention')]"
      },
      "dependsOn": [
      ],
      "resources": [
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "AzureActivityLog",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "AzureActivityLog",
          "properties": {
            "linkedResourceId": "[concat(subscription().id, '/providers/Microsoft.Insights/eventTypes/management')]"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "dataSources",
          "name": "EventSystemLog",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsEvent",
          "properties": {
            "eventLogName": "System",
            "eventTypes": [
              {
                "eventType": "Error"
              },
              {
                "eventType": "Warning"
              }
            ]
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "dataSources",
          "name": "EventApplicationLog",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsEvent",
          "properties": {
            "eventLogName": "Application",
            "eventTypes": [
              {
                "eventType": "Error"
              },
              {
                "eventType": "Warning"
              }
            ]
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfMemoryAvailMB",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Memory",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Available MBytes"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "ASRSourceVmChurnRate",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "ASRAnalytics",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "SourceVmChurnRate "
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "ASRSourceVmThrpRate ",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "ASRAnalytics",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "SourceVmThrpRate  "
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfMemoryPagesSec",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Memory",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Pages/sec"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfMemoryCommitedBytesInUse",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Memory",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "% Committed Bytes In Use"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskFreeSpace",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "% Free Space"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskAvgDiskRead",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Avg. Disk sec/Read"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskAvgDiskTransfer",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Avg. Disk sec/Transfer"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskAvgDiskWrite",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Avg. Disk sec/Write"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskCurDiskQueueLength",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Current Disk Queue Length"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskFreeMB",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Free Megabytes"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskDiskReads",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Disk Reads/sec"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskDiskWrites",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Disk Writes/sec"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfLogicalDiskDiskTransfers",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "LogicalDisk",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Disk Transfers/sec"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfSystemProcessor",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "System",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Processor Queue Length"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfProcessorTotal",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Processor",
            "instanceName": "_Total",
            "intervalSeconds": 60,
            "counterName": "% Processor Time"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfProcessProcessorTime",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Process",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "% Processor Time"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfProcessPrivateBytes",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Process",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Private Bytes"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfNetworkBytesTotal",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Network Interface",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Bytes Total/sec"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfNetworkBytesSent",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Network Adapter",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Bytes Sent/sec"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "type": "datasources",
          "name": "PerfNetworkBytesReceived",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "kind": "WindowsPerformanceCounter",
          "properties": {
            "objectName": "Network Adapter",
            "instanceName": "*",
            "intervalSeconds": 60,
            "counterName": "Bytes Received/sec"
          }
        },
        {
          "apiVersion": "2015-11-01-preview",
          "name": "[concat(variables('storageAccountName'), '(', variables('workspaceName'), ')')]",
          "type": "storageinsightconfigs",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ],
          "properties": {
            "containers": [
            ],
            "tables": [
              "WADWindowsEventLogsTable",
              "WADPerformanceCountersTable"
            ],
            "storageAccount": {
              "id": "[resourceId(resourceGroup().name,'Microsoft.Storage/storageaccounts/', variables('storageAccountName'))]",
              "key": "[listKeys(resourceId(resourceGroup().name,'Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-06-15').key1]"
            }
          }
        },
        {
          "type": "savedSearches",
          "name": "MaintenanceModeOngoing",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "category": "Getronics Monitoring",
            "displayName": "MaintenanceMode Ongoing",
            "query": "ConfigurationChange\r\n| where TimeGenerated > ago(60d)\r\n| where ConfigChangeType == \"WindowsServices\" \r\n| where SvcDisplayName == \"Maintenance Mode Ongoing\" \r\n| where ChangeCategory == \"Added\" or ChangeCategory == \"Removed\" \r\n| order by Computer , TimeGenerated asc\r\n| project Computer , ChangeCategory , TimeGenerated \r\n| summarize arg_max(TimeGenerated,*) by Computer\r\n| where ChangeCategory == \"Added\" \r\n| project Computer \r\n| distinct Computer",
            "version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchSvcWindowsFirewall",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "category": "Getronics Monitoring",
            "displayName": "Service - Windows Firewall",
            "query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Windows Firewall\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLogicalDiskPercentFreeSpace",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Logical Disk - Percent Free Space",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"LogicalDisk\" \n| where CounterName == \"% Free Space\" \n| where InstanceName <> \"HarddiskVolume1\" and InstanceName <> \"_Total\" and InstanceName <> \"C:\"\n| where TimeGenerated > ago(15m)\n| summarize PercentFree=avg(CounterValue) by Computer\n| where PercentFree < 10')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchSvcDHCPClient",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Service - DHCP Client",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"DHCP Client\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchHeartbeat",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Heartbeat per resource group > 3 minutes",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\r\nHeartbeat \r\n| where _ResourceId contains ResourceGroupName\r\n| summarize LastHeartbeat=max(TimeGenerated) by Computer \r\n| where LastHeartbeat < ago(3m)')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchSvcDNSClient",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Service - DNS Client",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"DNS Client\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLogicalCurDiskQueueLengthCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Logical Disk - Current Disk Queue Length - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"LogicalDisk\" \n| where CounterName == \"Current Disk Queue Length\" \n| where InstanceName <> \"_Total\" and InstanceName <> \"HarddiskVolume1\"\n//| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer, InstanceName\n//| where AggregatedValue  > 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchProcessorQueueCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Processor - Queue Length - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"System\" \n| where CounterName == \"Processor Queue Length\"\n| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue > 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchProcessorQueueWarning",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Processor - Queue Length - Warning",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"System\" \n| where CounterName == \"Processor Queue Length\"\n| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n| where AggregatedValue < 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchSvcWindowsEventLog",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Service - Windows Event Log",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Windows Event Log\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLogicalDiskCurDiskQueueLengthCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Logical Disk - Current Disk Queue Length - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"LogicalDisk\" \n| where CounterName == \"Current Disk Queue Length\" \n| where InstanceName <> \"_Total\" and InstanceName <> \"HarddiskVolume1\"\n//| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer, InstanceName\n| where AggregatedValue  > 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchMemoryPercentCommittedBytesInUseCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Memory - Percent Committed Bytes In Use - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Memory\" \n| where CounterName == \"% Committed Bytes In Use\" \n//| where TimeGenerated > ago(60m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer\n| where AggregatedValue > 90')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchMemoryAvailableMBCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Memory - Available MB - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Memory\" \n| where CounterName == \"Available MBytes\" \n//| where TimeGenerated > ago(60m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer\n//| where AggregatedValue < 500')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchProcessorTimeTotalCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Processor - Time Total - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Processor\" \n| where CounterName == \"% Processor Time\"\n| where InstanceName == \"_Total\"\n//| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue > 85')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLogicalDiskCurDiskQueueLengthCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Logical Disk - Current Disk Queue Length - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"LogicalDisk\" \n| where CounterName == \"Current Disk Queue Length\" \n| where InstanceName <> \"_Total\" and InstanceName <> \"HarddiskVolume1\"\n//| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer, InstanceName\n//| where AggregatedValue  > 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchSvcWinRM",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Service - WinRM",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Windows Remote Management (WS-Management)\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchMemoryPagesSecCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Memory - Pages per Sec - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Memory\" \n| where CounterName == \"Pages/sec\" \n//| where TimeGenerated > ago(60m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer\n//| where AggregatedValue > 500')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLogicalDiskFreeMBonCCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Logical Disk - Free MB on C - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf \n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"LogicalDisk\" \n| where CounterName == \"Free Megabytes\" \n| where InstanceName == \"C:\"\n| where TimeGenerated > ago(5m) \n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue < 5000')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchHeartbeatcritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Heartbeat alert - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nHeartbeat\n| where _ResourceId contains ResourceGroupName\n| summarize LastHeartbeat=max(TimeGenerated) by Computer \n| where LastHeartbeat < ago(5m)')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchSvcRPC",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Service - RPC",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Remote Procedure Call (RPC)\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },

        {
          "type": "savedSearches",
          "name": "SearchMemoryCommittedBytesInUseCritical",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Memory - Percent Committed Bytes In Use - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Memory\" \n| where CounterName == \"% Committed Bytes In Use\" \n//| where TimeGenerated > ago(60m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer\n//| where AggregatedValue > 90')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchSvcServer",
          "apiVersion": "2017-03-15-preview",
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Service - Server",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Server\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNetworkAzVnet2OnPrem",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Network - AzVnet2OnPrem",
            "Query": "NetworkMonitoring \r\n| where TestName == \"AzVnet2OnPrem\"\r\n| where (SubType == \"EndpointHealth\" or SubType == \"EndpointPath\")\r\n| where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or ServiceResponseHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\")",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNetworkAzVnet2Web",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Network - AzVnet2Web",
            "Query": "NetworkMonitoring \r\n| where TestName == \"AzVnet2Web\"\r\n| where (SubType == \"EndpointHealth\" or SubType == \"EndpointPath\")\r\n| where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or ServiceResponseHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\")",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNetworkAzVnet2AzVnet",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Network - AzVnet2AzVnet",
            "Query": "NetworkMonitoring \r\n| where TestName == \"AzVnet2AzVnet\"\r\n| where (SubType == \"EndpointHealth\" or SubType == \"EndpointPath\")\r\n| where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or ServiceResponseHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\")",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureLogDiskQueueLengthCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Logical Disk - Current Disk Queue Length - Critical (NonAzure)')]",
            "Query": "[concat('Perf\n| where _ResourceId == \"\" \n| where ObjectName == \"LogicalDisk\" \n| where CounterName == \"Current Disk Queue Length\" \n| where InstanceName <> \"_Total\" and InstanceName <> \"HarddiskVolume1\"\n//| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 5m), Computer, InstanceName\n//| where AggregatedValue  > 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureLogDiskFReeMBonCCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Logical Disk - Free MB on C - Critical (NonAzure)')]",
            "Query": "[concat('Perf \n| where _ResourceId == \"\" \n| where ObjectName == \"LogicalDisk\" \n| where CounterName == \"Free Megabytes\" \n| where InstanceName == \"C:\"\n| where TimeGenerated > ago(5m) \n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 5m), Computer \n//| where AggregatedValue < 5000')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureMemoryAvailMBCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Memory - Available MB - Critical (NonAzure)')]",
            "Query": "[concat('Perf\n| where _ResourceId == \"\" \n| where ObjectName == \"Memory\" \n| where CounterName == \"Available MBytes\" \n//| where TimeGenerated > ago(60m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 5m), Computer\n//| where AggregatedValue < 500')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureMemoryPagesPerSecCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Memory - Pages per Sec - Critical (NonAzure)')]",
            "Query": "[concat('Perf\n| where _ResourceId == \"\" \n| where ObjectName == \"Memory\" \n| where CounterName == \"Pages/sec\" \n//| where TimeGenerated > ago(60m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 5m), Computer\n//| where AggregatedValue > 500')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureMemoryCommittedBytesCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Memory - Percent Committed Bytes in Use - Critical (NonAzure)')]",
            "Query": "[concat('Perf\n| where _ResourceId == \"\" \n| where ObjectName == \"Memory\" \n| where CounterName == \"% Committed Bytes In Use\" \n//| where TimeGenerated > ago(60m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 5m), Computer\n//| where AggregatedValue > 90')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureProcessorQueueLengthCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Processor - Queue Length - Critical (NonAzure)')]",
            "Query": "[concat('Perf\n| where _ResourceId == \"\" \n| where ObjectName == \"System\" \n| where CounterName == \"Processor Queue Length\"\n| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 5m), Computer \n//| where AggregatedValue > 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureProcessorTimeTotalCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Processor - Time Total - Critical (NonAzure)')]",
            "Query": "[concat('Perf\n| where _ResourceId == \"\" \n| where ObjectName == \"Processor\" \n| where CounterName == \"% Processor Time\"\n| where InstanceName == \"_Total\"\n//| where TimeGenerated > ago(15m)\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 5m), Computer \n//| where AggregatedValue > 85')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureServiceDHCPClient",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Service - DHCP Client (NonAzure)')]",
            "Query": "[concat('ConfigurationChange\n| where _ResourceId == \"\" \n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"DHCP Client\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureServiceDNSClient",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Service - DNS Client (NonAzure)')]",
            "Query": "[concat('ConfigurationChange\n| where _ResourceId == \"\" \n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"DNS Client\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureServiceRPC",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Service - RPC (NonAzure)')]",
            "Query": "[concat('ConfigurationChange\n| where _ResourceId == \"\" \n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Remote Procedure Call (RPC)\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureServiceServer",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Service - Server (NonAzure)')]",
            "Query": "[concat('ConfigurationChange\n| where _ResourceId == \"\" \n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Server\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureServiceWinRM",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Service - WinRM (NonAzure)')]",
            "Query": "[concat('ConfigurationChange\n| where _ResourceId == \"\" \n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Windows Remote Management (WS-Management)\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchNonAzureServiceWindowsFirewall",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "[concat('Service - Windows Firewall (NonAzure)')]",
            "Query": "[concat('ConfigurationChange\n| where _ResourceId == \"\" \n//| where TimeGenerated > ago(30m) \n| where ConfigChangeType == \"WindowsServices\" \n| where SvcDisplayName == \"Windows Firewall\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SPodsRecoveredFromFailure",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Pods that are failing or recovered from failure",
            "Query": "[concat('KubeEvents \r\n| where ClusterName =~ \"', 'K8SClusterName', '\"\r\n| where ObjectKind =~ \"Pod\"\r\n| where Reason =~ \"BackOff\"\r\n| project TimeGenerated, Count, Computer\r\n| summarize AggregatedValue=sum(Count) by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SPodsEvicted",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Pods are being evicted",
            "Query": "[concat('KubeEvents \r\n| where ClusterName =~ \"', 'K8SClusterName', '\"\r\n| where Reason =~ \"Evicted\"\r\n| project TimeGenerated, Count, Computer\r\n| summarize AggregatedValue=sum(Count) by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SStorageIssues",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Storage related issues have been detected",
            "Query": "[concat('KubeEvents \r\n| where ClusterName =~ \"', 'K8SClusterName', '\"\r\n| where Reason =~ \"FailedMount\" or Reason =~ \"FailedAttachVolume\" \r\n| project TimeGenerated, Count, Computer\r\n| summarize AggregatedValue=sum(Count) by bin(TimeGenerated, 15m), Computer ')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SSchedulerNoNode",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Scheduler unable to find node to run pod",
            "Query": "[concat('KubeEvents \r\n| where ClusterName =~ \"', 'K8SClusterName', '\"\r\n| where Reason =~ \"FailedScheduling\"\r\n| project TimeGenerated, Count, ClusterName\r\n| summarize AggregatedValue=sum(Count) by bin(TimeGenerated, 15m), ClusterName')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SNodeNotReady",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Node not ready or not schedulable",
            "Query": "[concat('KubeEvents \r\n| where ClusterName =~ \"', 'K8SClusterName', '\"\r\n| where Reason =~ \"NodeNotReady\" or Reason =~ \"NodeNotSchedulable\" \r\n| project TimeGenerated, Count, Computer\r\n| summarize AggregatedValue=sum(Count) by bin(TimeGenerated, 15m), Computer ')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8STooManyFailures",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Too many failures detected in short time-span",
            "Query": "[concat('KubeEvents \r\n| where ClusterName =~ \"', 'K8SClusterName', '\"\r\n| where Reason contains \"Fail\"\r\n| project TimeGenerated, Count, ClusterName\r\n| summarize AggregatedValue=sum(Count) by bin(TimeGenerated, 15m), ClusterName')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SNodeCPUCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Nodes average CPU utilization in percent (Critical)",
            "Query": "[concat('let endDateTime = now();\r\nlet startDateTime = ago(60m);\r\nlet trendBinSize = 15m;\r\nlet capacityCounterName = \"cpuCapacityNanoCores\";\r\nlet usageCounterName = \"cpuUsageNanoCores\";\r\nKubeNodeInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| where ClusterName =~ \"', 'K8SClusterName', '\" \r\n| distinct ClusterName, Computer\r\n| join hint.strategy=shuffle (\r\nPerf\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| where ObjectName == \"K8SNode\"\r\n| where CounterName == capacityCounterName\r\n| summarize LimitValue = max(CounterValue) by Computer, CounterName, bin(TimeGenerated, trendBinSize)\r\n| project Computer, CapacityStartTime = TimeGenerated, CapacityEndTime = TimeGenerated + trendBinSize, LimitValue\r\n) on Computer\r\n| join kind=inner hint.strategy=shuffle (\r\nPerf\r\n| where TimeGenerated < endDateTime + trendBinSize\r\n| where TimeGenerated >= startDateTime - trendBinSize\r\n| where ObjectName == \"K8SNode\"\r\n| where CounterName == usageCounterName\r\n| project Computer, UsageValue = CounterValue, TimeGenerated\r\n) on Computer\r\n| where TimeGenerated >= CapacityStartTime and TimeGenerated < CapacityEndTime\r\n| project ClusterName, Computer, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue\r\n| summarize AggregatedValue = avg(UsagePercent) by bin(TimeGenerated, trendBinSize), Computer\r\n| order by TimeGenerated asc')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SNodeMEMCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Nodes average memory utilization in percent (Critical)",
            "Query": "[concat('let endDateTime = now();\r\nlet startDateTime = ago(60m);\r\nlet trendBinSize = 15m;\r\nlet capacityCounterName = \"memoryCapacityBytes\";\r\nlet usageCounterName = \"memoryRssBytes\";\r\nKubeNodeInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| where ClusterName =~ \"', 'K8SClusterName', '\" \r\n| distinct ClusterName, Computer\r\n| join hint.strategy=shuffle (\r\nPerf\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| where ObjectName == \"K8SNode\"\r\n| where CounterName == capacityCounterName\r\n| summarize LimitValue = max(CounterValue) by Computer, CounterName, bin(TimeGenerated, trendBinSize)\r\n| project Computer, CapacityStartTime = TimeGenerated, CapacityEndTime = TimeGenerated + trendBinSize, LimitValue\r\n) on Computer\r\n| join kind=inner hint.strategy=shuffle (\r\nPerf\r\n| where TimeGenerated < endDateTime + trendBinSize\r\n| where TimeGenerated >= startDateTime - trendBinSize\r\n| where ObjectName == \"K8SNode\"\r\n| where CounterName == usageCounterName\r\n| project Computer, UsageValue = CounterValue, TimeGenerated\r\n) on Computer\r\n| where TimeGenerated >= CapacityStartTime and TimeGenerated < CapacityEndTime\r\n| project ClusterName, Computer, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue\r\n| summarize AggregatedValue = avg(UsagePercent) by bin(TimeGenerated, trendBinSize), Computer\r\n//| where AggregatedValue <= 95\r\n| order by TimeGenerated asc ')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SFailingPodsHigh",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Percent failing Pods is too high",
            "Query": "[concat('let endDateTime = now();\r\nlet startDateTime = ago(60m);\r\nlet trendBinSize = 15m;\r\nlet clusterName = \"', 'K8SClusterName', '\";\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| where ClusterName == clusterName\r\n| distinct ClusterName, TimeGenerated\r\n| summarize ClusterSnapshotCount = count() by bin(TimeGenerated, trendBinSize), ClusterName\r\n| join hint.strategy=broadcast (\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| distinct ClusterName, Computer, PodUid, TimeGenerated, PodStatus\r\n| summarize TotalCount = count(),\r\nPendingCount = sumif(1, PodStatus =~ \"Pending\"),\r\nRunningCount = sumif(1, PodStatus =~ \"Running\"),\r\nSucceededCount = sumif(1, PodStatus =~ \"Succeeded\"),\r\nFailedCount = sumif(1, PodStatus =~ \"Failed\")\r\nby ClusterName, bin(TimeGenerated, trendBinSize)\r\n) on ClusterName, TimeGenerated\r\n| extend UnknownCount = TotalCount - PendingCount - RunningCount - SucceededCount - FailedCount\r\n| project TimeGenerated, ClusterName,\r\nTotalCount = todouble(TotalCount) / ClusterSnapshotCount,\r\nPendingCount = todouble(PendingCount) / ClusterSnapshotCount,\r\nPendingPercent = round((todouble(PendingCount) / todouble(TotalCount) * 100)), \r\nRunningCount = todouble(RunningCount) / ClusterSnapshotCount,\r\nRunningPercent = round((todouble(RunningCount) / todouble(TotalCount) * 100)),\r\nSucceededCount = todouble(SucceededCount) / ClusterSnapshotCount,\r\nSucceededPercent = round((todouble(SucceededCount) / todouble(TotalCount) * 100)),\r\nFailedCount = todouble(FailedCount) / ClusterSnapshotCount,\r\nFailedPercent = round((todouble(FailedCount) / todouble(TotalCount) * 100)),\r\nUnknownCount = todouble(UnknownCount) / ClusterSnapshotCount,\r\nUnknownPercent = round((todouble(UnknownCount) / todouble(TotalCount) * 100))\r\n| summarize AggregatedValue = avg(FailedPercent) by bin(TimeGenerated, trendBinSize), ClusterName')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SUnknownPodsHigh",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Percent unknown Pods is too high",
            "Query": "[concat('let endDateTime = now();\r\nlet startDateTime = ago(60m);\r\nlet trendBinSize = 15m;\r\nlet clusterName = \"', 'K8SClusterName', '\";\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| where ClusterName == clusterName\r\n| distinct ClusterName, TimeGenerated\r\n| summarize ClusterSnapshotCount = count() by bin(TimeGenerated, trendBinSize), ClusterName\r\n| join hint.strategy=broadcast (\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| distinct ClusterName, Computer, PodUid, TimeGenerated, PodStatus\r\n| summarize TotalCount = count(),\r\nPendingCount = sumif(1, PodStatus =~ \"Pending\"),\r\nRunningCount = sumif(1, PodStatus =~ \"Running\"),\r\nSucceededCount = sumif(1, PodStatus =~ \"Succeeded\"),\r\nFailedCount = sumif(1, PodStatus =~ \"Failed\")\r\nby ClusterName, bin(TimeGenerated, trendBinSize)\r\n) on ClusterName, TimeGenerated\r\n| extend UnknownCount = TotalCount - PendingCount - RunningCount - SucceededCount - FailedCount\r\n| project TimeGenerated, ClusterName\r\nTotalCount = todouble(TotalCount) / ClusterSnapshotCount,\r\nPendingCount = todouble(PendingCount) / ClusterSnapshotCount,\r\nPendingPercent = round((todouble(PendingCount) / todouble(TotalCount) * 100)), \r\nRunningCount = todouble(RunningCount) / ClusterSnapshotCount,\r\nRunningPercent = round((todouble(RunningCount) / todouble(TotalCount) * 100)),\r\nSucceededCount = todouble(SucceededCount) / ClusterSnapshotCount,\r\nSucceededPercent = round((todouble(SucceededCount) / todouble(TotalCount) * 100)),\r\nFailedCount = todouble(FailedCount) / ClusterSnapshotCount,\r\nFailedPercent = round((todouble(FailedCount) / todouble(TotalCount) * 100)),\r\nUnknownCount = todouble(UnknownCount) / ClusterSnapshotCount,\r\nUnknownPercent = round((todouble(UnknownCount) / todouble(TotalCount) * 100))\r\n| summarize AggregatedValue = avg(UnknownPercent) by bin(TimeGenerated, trendBinSize), ClusterName')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchK8SClusterNodesDiskFreeSpace",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "K8S - Cluster nodes disks free space used exceeded (Critical)",
            "Query": "[concat('let clusterId = \"', 'K8SResourceId', '\";\r\nlet endDateTime = now();\r\nlet startDateTime = ago(60m);\r\nlet trendBinSize = 15m;\r\nInsightsMetrics\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n| where Origin == \"container.azm.ms/telegraf\" \r\n| where Namespace == \"container.azm.ms/disk\" \r\n| extend Tags = todynamic(Tags) \r\n| project TimeGenerated, ClusterId = Tags[\"container.azm.ms/clusterId\"], Computer = tostring(Tags.hostName), Device = tostring(Tags.device), Path = tostring(Tags.path), DiskMetricName = Name, DiskMetricValue = Val \r\n| where ClusterId =~ clusterId \r\n| where DiskMetricName == \"used_percent\"\r\n| summarize AggregatedValue = max(DiskMetricValue) by bin(TimeGenerated, trendBinSize), Device, Computer\r\n| order by TimeGenerated asc')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "savedSearchesASRReplHealthCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "ASR - Replication health - Critical",
            "Query": "[concat('AzureDiagnostics\n| where replicationProviderName_s == \"InMageAzureV2\"\n| where isnotempty(name_s) and isnotnull(name_s)\n| where tolower(Resource) == \"', '__ASRName__', '\" \n| project TimeGenerated, name_s , replicationHealth_s\n| where replicationHealth_s == \"Critical\"\n| summarize AggregatedValue = count() by bin(TimeGenerated, 15m), name_s\n| order by TimeGenerated asc')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "savedSearchesASRReplHealthWarning",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "ASR - Replication health - Warning",
            "Query": "[concat('AzureDiagnostics\n| where replicationProviderName_s == \"InMageAzureV2\"\n| where isnotempty(name_s) and isnotnull(name_s)\n| where tolower(Resource) == \"', '__ASRName__', '\" \n| project TimeGenerated, name_s , replicationHealth_s\n| where replicationHealth_s == \"Warning\"\n| summarize AggregatedValue = count() by bin(TimeGenerated, 15m), name_s\n| order by TimeGenerated asc')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "savedSearchesASRRPOBreachWarning",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "ASR - RPO breaches - Warning",
            "Query": "[concat('AzureDiagnostics \n| where replicationProviderName_s == \"InMageAzureV2\"   \n| where isnotempty(name_s) and isnotnull(name_s) \n| where tolower(Resource) == \"', '__ASRName__', '\" \n| extend RPO = case(rpoInSeconds_d > ', '__RPOCritical__', ', \"Critical\", rpoInSeconds_d ', '__RPOWarning__', ', \"Warning\", \"Ok\")  \n| project TimeGenerated, name_s, RPO\n| where RPO == \"Warning\"\n| summarize AggregatedValue = count() by bin(TimeGenerated, 15m), name_s  \n| order by TimeGenerated')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "savedSearchesASRRPOBreachCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "ASR - RPO breaches - Critical",
            "Query": "[concat('AzureDiagnostics \n| where replicationProviderName_s == \"InMageAzureV2\"   \n| where isnotempty(name_s) and isnotnull(name_s) \n| where tolower(Resource) == \"', '__ASRName__', '\" \n| extend RPO = case(rpoInSeconds_d > ', '__RPOCritical__', ', \"Critical\", rpoInSeconds_d ', '__RPOWarning__', ', \"Warning\", \"Ok\")  \n| project TimeGenerated, name_s, RPO\n| where RPO == \"Critical\"\n| summarize AggregatedValue = count() by bin(TimeGenerated, 15m), name_s  \n| order by TimeGenerated')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "savedSearchesASRTestFailoverMissing",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "ASR - Too many test failovers missing - Warning",
            "Query": "[concat('AzureDiagnostics\n| where replicationProviderName_s == \"InMageAzureV2\"\n| where isnotempty(name_s) and isnotnull(name_s)\n| where isnotempty(failoverHealth_s) and isnotnull(failoverHealth_s)\n| where tolower(Resource) == \"', 'ASRName', '\"\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by name_s\n| project TimeGenerated, VirtualMachine = name_s , VaultName = Resource , TestFailoverStatus = failoverHealth_s \n| where TestFailoverStatus == \"Critical\"\n//| summarize AggregatedValue = count() by TestFailoverStatus\n//| order by TimeGenerated asc')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "savedSearchesASRJobFailures",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "ASR - Job failures",
            "Query": "[concat('AzureDiagnostics\n| where Category == \"AzureSiteRecoveryJobs\"\n| where tolower(Resource) == \"', 'ASRName', '\" \n| where ResultType == \"Failed\"\n| summarize AggregatedValue = count() by bin(TimeGenerated, 30m)')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "savedSearchesASRTestFailover90d",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "ASR - Test failover last date 90days",
            "Query": "[concat('AzureDiagnostics\n| where replicationProviderName_s == \"InMageAzureV2\"\n| where tolower(Resource) == \"asr-test-bvlt\"\n| where Category == \"AzureSiteRecoveryReplicatedItems\"\n| where isnotempty(name_s) and isnotnull(name_s)\n| where lastSuccessfulTestFailoverTime_t <= ago(90d)\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by name_s\n| summarize count() ')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogDaemonCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - daemon - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"daemon\"\n| where SeverityLevel in (\"emerg\",\"alert\",\"crit\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogDaemonWarning",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - daemon - Warning",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"daemon\"\n| where SeverityLevel in (\"err\",\"warning\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogKernCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - kern - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"kern\"\n| where SeverityLevel in (\"emerg\",\"alert\",\"crit\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogKernWarning",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - kern - Warning",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"kern\"\n| where SeverityLevel in (\"err\",\"warning\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogCronCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - cron - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"cron\"\n| where SeverityLevel in (\"emerg\",\"alert\",\"crit\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogCronWarning",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - cron - Warning",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"cron\"\n| where SeverityLevel in (\"err\",\"warning\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogAuthCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - auth - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"auth\"\n| where SeverityLevel in (\"emerg\",\"alert\",\"crit\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogAuthWarning",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - auth - Warning",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"auth\"\n| where SeverityLevel in (\"err\",\"warning\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogSyslogCritical",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - syslog - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"syslog\"\n| where SeverityLevel in (\"emerg\",\"alert\",\"crit\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxSyslogSyslogWarning",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Syslog - syslog - Warning",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nSyslog\n| where _ResourceId contains ResourceGroupName\n| where Facility == \"syslog\"\n| where SeverityLevel in (\"err\",\"warning\")\n| summarize AggregatedValue=cnt() by bin(TimeGenerated, 15m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxDaemonStateNtpd",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Daemon - State - ntpd",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n| where ConfigChangeType == \"Daemons\" \n| where SvcDisplayName == \"ntpd\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxDaemonStateCrond",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Daemon - State - crond",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n| where ConfigChangeType == \"Daemons\" \n| where SvcDisplayName == \"crond\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxDaemonStateSshd",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Daemon - State - sshd",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n| where ConfigChangeType == \"Daemons\" \n| where SvcDisplayName == \"sshd\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxDaemonStateSyslogd",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Daemon - State - syslogd",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n| where ConfigChangeType == \"Daemons\" \n| where SvcDisplayName == \"syslogd\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxDaemonStateAuditd",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Daemon - State - auditd",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nConfigurationChange\n| where _ResourceId contains ResourceGroupName\n| where ConfigChangeType == \"Daemons\" \n| where SvcDisplayName == \"auditd\"\n| where SvcChangeType == \"State\"\n| where SvcPreviousState == \"Running\"\n| where SvcState <> \"Running\"\n| summarize AggregatedValue=count() by bin(TimeGenerated, 5m), Computer')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxMemPctAvail",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Memory - pct Available - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Memory\" \n| where CounterName == \"% Available Memory\"\n| where InstanceName == \"Memory\"\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue < 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxMemPctAvailSwapSpace",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Memory - pct Available Swap Space - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Memory\" \n| where CounterName == \"% Available Swap Space\"\n| where InstanceName == \"Memory\"\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue < 5')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxMemPagesPerSec",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Memory - Pages per Sec - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Memory\" \n| where CounterName == \"Pages/sec\"\n| where InstanceName == \"Memory\"\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue > 500')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxDiskPctUsedSpaceRoot",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Logical Disk - pct Used Space - root - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Logical Disk\" \n| where CounterName == \"% Used Space\"\n| where InstanceName == \"/\"\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue > 95')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxDiskPctFreeMBRoot",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Logical Disk - Free Megabytes - root - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Logical Disk\" \n| where CounterName == \"Free Megabytes\"\n| where InstanceName == \"/\"\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue < 500')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        },
        {
          "type": "savedSearches",
          "name": "SearchLinuxProcPctIOWait",
          "apiVersion": "2017-03-15-preview",
          "scale": null,
          "properties": {
            "Category": "Getronics Monitoring",
            "DisplayName": "Linux Processor - pct IO Wait Time - _Total - Critical",
            "Query": "[concat('let ResourceGroupName = \"/resourcegroups/', variables('VMRGName'), '/\";\nPerf\n| where _ResourceId contains ResourceGroupName\n| where ObjectName == \"Processor\" \n| where CounterName == \"% IO Wait Time\"\n| where InstanceName == \"_Total\"\n| summarize AggregatedValue=avg(CounterValue) by bin(TimeGenerated, 15m), Computer \n//| where AggregatedValue > 85')]",
            "Version": 2
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('ADAssessment(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/ADAssessment(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('ADAssessment(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/ADAssessment",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/ADAssessment(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('AgentHealthAssessment(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/AgentHealthAssessment(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('AgentHealthAssessment(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/AgentHealthAssessment",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/AgentHealthAssessment(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('AlertManagement(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/AlertManagement(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('AlertManagement(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/AlertManagement",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/AlertManagement(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('AntiMalware(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/AntiMalware(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('AntiMalware(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/AntiMalware",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/AntiMalware(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('AzureActivity(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/AzureActivity(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('AzureActivity(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/AzureActivity",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/AzureActivity(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('DnsAnalytics(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/DnsAnalytics(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('DnsAnalytics(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/DnsAnalytics",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/DnsAnalytics(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('AzureAutomation(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/AzureAutomation(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('AzureAutomation(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/AzureAutomation",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/AzureAutomation(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('AzureNSGAnalytics(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/AzureNSGAnalytics(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('AzureNSGAnalytics(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/AzureNSGAnalytics",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/AzureNSGAnalytics(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('ChangeTracking(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/ChangeTracking(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('ChangeTracking(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/ChangeTracking",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/ChangeTracking(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('LogicAppsManagement(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/LogicAppsManagement(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('LogicAppsManagement(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/LogicAppsManagement",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/LogicAppsManagement(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('NetworkMonitoring(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/NetworkMonitoring(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('NetworkMonitoring(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/NetworkMonitoring",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/NetworkMonitoring(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('Office365(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/Office365(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('Office365(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/Office365",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/Office365(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('Security(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/Security(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('Security(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/Security",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/Security(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('ServiceDesk(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/ServiceDesk(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('ServiceDesk(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/ServiceDesk",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/ServiceDesk(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('ServiceMap(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/ServiceMap(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('ServiceMap(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/ServiceMap",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/ServiceMap(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('SQLAssessment(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/SQLAssessment(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('SQLAssessment(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/SQLAssessment",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/SQLAssessment(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('Updates(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/Updates(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('Updates(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/Updates",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/Updates(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[concat('WireData2(', variables('workspaceName'), ')')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/WireData2(', variables('workspaceName'), ')')]",
      "plan": {
        "name": "[concat('WireData2(', variables('workspaceName'), ')')]",
        "promotionCode": "",
        "product": "OMSGallery/WireData2",
        "publisher": "Microsoft"
      },
      "scale": null,
      "properties": {
        "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "containedResources": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.operationalinsights/workspaces/', variables('workspaceName'), '/views/WireData2(', variables('workspaceName'), ')')]"
        ]
      },
      "dependsOn": [
        "[concat('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
      ]
    },
    {
      "type": "microsoft.operationalinsights/workspaces/providers/locks",
      "name": "[concat(variables('workspaceName'), '/Microsoft.Authorization/workspacelock')]",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces', variables('workspaceName'))]"
      ],
      "properties": {
        "level": "CannotDelete",
        "notes": "Workspace should not be deleted."
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2018-07-01",
      "location": "[parameters('Location')]",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "EndsOn": "[parameters('EndsOn')]",
        "CreatedBy": "[parameters('CreatedBy')]",
        "OwnedBy": "[parameters('OwnedBy')]",
        "Project": "[parameters('Project')]",
        "Environment": "[parameters('Environment')]"
      },
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [
          ],
          "ipRules": [
          ],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      },
      "dependsOn": [
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/locks",
      "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/storageaccountlock')]",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "level": "CannotDelete",
        "notes": "Storage account should not be deleted."
      }
    },
    {
      "type": "microsoft.operationalinsights/workspaces/linkedservices",
      "name": "[concat(variables('workspaceName'), '/automation')]",
      "apiVersion": "2015-11-01-preview",
      "scale": null,
      "properties": {
        "resourceId": "[resourceId(concat('Microsoft.Automation/automationAccounts'), variables('automationAccountName'))]"
      },
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "StorageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "AutomationAccountName": {
      "type": "string",
      "value": "[variables('automationAccountName')]"
    },
    "WorkspaceName": {
      "type": "string",
      "value": "[variables('workspaceName')]"
    },
    "WorkspaceId": {
      "type": "string",
      "value": "[resourceId('microsoft.operationalinsights/workspaces/', variables('workspaceName'))]"
    },
    "AutomationAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
    }
  }
}

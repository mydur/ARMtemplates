{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Project": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the project."
      },
      "defaultValue": "agxblob"
    },
    "EmailAddress": {
      "type": "string",
      "metadata": {
        "description": "SMTP address to notify in case of monitoring annomalies."
      },
      "defaultValue": "rudy.michiels@getronics.com"
    },
    "CreatedOn": {
      "defaultValue": "[utcNow()]",
      "type": "String"
    },
    "AccessTier": {
      "type": "string",
      "defaultValue": "Cool",
      "allowedValues": ["Hot", "Cool"]
    },
    "DaysImmutability": {
      "type": "string",
      "defaultValue": "10"
    },
    "BlobCapacityThresholdMB": {
      "type": "int",
      "defaultValue": 20
    }
  },
  "variables": {
    "TemplateId": "agx-blob",
    "TemplateVersion": "1.0.0",
    "TemplateDate": "20190327",
    "TemplateDescription": "Initial verison.",
    "TemplateUsage": "Used to create storage account and configure blob services.",
    "TemplateDocumentation": "<Name of document.>",
    "Environment": "test"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('Project'), variables('Environment'), 'stor')]",
      "apiVersion": "2018-11-01",
      "location": "westeurope",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "Project": "[parameters('Project')]"
      },
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "accessTier": "[parameters('AccessTier')]"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "name": "[concat('default/', parameters('Project'))]",
          "apiVersion": "2018-11-01",
          "properties": {
            "publicAccess": "None"
          },
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor')]"
          ],
          "resources": [
            {
              "type": "immutabilityPolicies",
              "name": "default",
              "apiVersion": "2018-11-01",
              "properties": {
                "immutabilityPeriodSinceCreationInDays": "[parameters('DaysImmutability')]"
              },
              "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor/blobServices/default/containers/', parameters('Project'))]"
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "microsoft.insights/actionGroups",
      "name": "[concat(parameters('Project'), '-', variables('Environment'), '-agrp')]",
      "apiVersion": "2018-03-01",
      "location": "global",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "Project": "[parameters('Project')]"
      },
      "properties": {
        "groupShortName": "[concat(parameters('Project'), '_smtp')]",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "[concat(parameters('Project'), ' SMTP_-EmailAction-')]",
            "emailAddress": "[parameters('EmailAddress')]"
          }
        ],
        "smsReceivers": [],
        "webhookReceivers": [],
        "itsmReceivers": [],
        "azureAppPushReceivers": [],
        "automationRunbookReceivers": [],
        "voiceReceivers": [],
        "logicAppReceivers": [],
        "azureFunctionReceivers": []
      },
      "dependsOn": []
    },
    {
      "name": "[concat('Blob Availability (', parameters('Project'), variables('Environment'), 'stor)')]",
      "type": "Microsoft.Insights/metricAlerts",
      "location": "global",
      "apiVersion": "2018-03-01",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "Project": "[parameters('Project')]"
      },
      "properties": {
        "description": "[concat('Blob Availability (', parameters('Project'), ')')]",
        "severity": 2,
        "enabled": true,
        "scopes": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor/blobServices/default')]"
        ],
        "evaluationFrequency": "PT15M",
        "windowSize": "PT1H",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "1st criterion",
              "metricName": "Availability",
              "dimensions": [],
              "operator": "LessThan",
              "threshold": 100,
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', parameters('Project'), '-', variables('Environment'), '-agrp')]"
          }
        ],
        "dependsOn": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor/blobServices/default')]"
        ]
      }
    },
    {
      "name": "[concat('Storage Account Availability (', parameters('Project'), variables('Environment'), 'stor)')]",
      "type": "Microsoft.Insights/metricAlerts",
      "location": "global",
      "apiVersion": "2018-03-01",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "Project": "[parameters('Project')]"
      },
      "properties": {
        "description": "[concat('Storage Account Availability (', parameters('Project'), ')')]",
        "severity": 2,
        "enabled": true,
        "scopes": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor')]"
        ],
        "evaluationFrequency": "PT15M",
        "windowSize": "PT1H",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "1st criterion",
              "metricName": "Availability",
              "dimensions": [],
              "operator": "LessThan",
              "threshold": 100,
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', parameters('Project'), '-', variables('Environment'), '-agrp')]"
          }
        ],
        "dependsOn": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor')]"
        ]
      }
    },
    {
      "name": "[concat('Blob Capacity (', parameters('Project'), variables('Environment'), 'stor)')]",
      "type": "Microsoft.Insights/metricAlerts",
      "location": "global",
      "apiVersion": "2018-03-01",
      "tags": {
        "TemplateId": "[variables('TemplateId')]",
        "TemplateVersion": "[variables('TemplateVersion')]",
        "CreatedOn": "[parameters('CreatedOn')]",
        "Project": "[parameters('Project')]"
      },
      "properties": {
        "description": "[concat('Blob Capacity (', parameters('Project'), ')')]",
        "severity": 2,
        "enabled": true,
        "scopes": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor/blobServices/default')]"
        ],
        "evaluationFrequency": "PT15M",
        "windowSize": "PT1H",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "1st criterion",
              "metricName": "BlobCapacity",
              "dimensions": [],
              "operator": "GreaterThan",
              "threshold": "[mul(parameters('BlobCapacityThresholdMB'), 1000000)]",
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', parameters('Project'), '-', variables('Environment'), '-agrp')]"
          }
        ],
        "dependsOn": [
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', parameters('Project'), variables('Environment'), 'stor/blobServices/default')]"
        ]
      }
    }
  ]
}
